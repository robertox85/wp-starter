// Colors Mixin
// ====================================
@mixin color-modifiers($attribute: "color", $prefix: "-") {
    @each $name, $hex in $colors {
        &#{$prefix}#{$name} {
            #{$attribute}: var(--#{$name}) !important;
        }
    }
}

// ------------------------------
//  BUTTON MIXIN
// ------------------------------
@mixin button($button-type: "", $button-radius: 0, $button-size: "", $prefix: "-") {
    @each $name, $hex in $colors {
        @if ($button-type == "solid") {
            &#{$prefix}#{$name} {
                background: var(--#{$name});
                color: set-button-text-color($hex, "solid");
                border-color: $hex;

                &:hover {
                    background: lighten($color: $hex, $amount: 10);
                    color: set-button-text-color(invert(set-button-text-color($hex)));
                    transition: all $transition ease;
                    text-decoration: none;
                }

                &:focus {
                    text-decoration: none;
                }

                &:active {
                    box-shadow: inset 0 0 20px 0 rgba(0, 58, 112, 0.3);
                }

                &.disabled {
                    pointer-events: none;
                    cursor: not-allowed;
                    opacity: 0.6;
                }

                @if($button-radius>0){
                    @include border-radius($border-radius);
                }

                // Button Size (small or normal (or no value) )
                @if ($button-size == "small") {
                    padding: rem(8px) rem(22px) !important;
                }

                @if ($button-size == "medium") {
                    padding: rem(18px) rem(32px) !important;
                }
                @if ($button-size == "large") {
                    padding: rem(28px) rem(42px) !important;
                }
            }
        } @else {
            // outline button
            &#{$prefix}#{$name} {
                border: 1px solid var(--#{$name});
                color: set-button-text-color($hex, "outline");

                &:hover {
                    background: var(--#{$name});
                    color: set-button-text-color($hex, "solid");
                    text-decoration: none;
                }

                &:focus {
                    text-decoration: none;
                }

                &:active {
                    background: var(--#{$name});
                    box-shadow: inset 0 0 20px 0 rgba(0, 58, 112, 0.3);
                }

                &.disabled {
                    pointer-events: none;
                    cursor: not-allowed;
                    opacity: 0.6;
                }

                @if($button-radius>0){
                    @include border-radius($border-radius);
                }

                // Button Size (small or normal (or no value) )
                @if ($button-size == "small") {
                    padding: rem(8px) rem(22px) !important;
                }

                @if ($button-size == "medium") {
                    padding: rem(18px) rem(32px) !important;
                }
                @if ($button-size == "large") {
                    padding: rem(28px) rem(42px) !important;
                }
            }
        }
    }
}

// Placeholder Mixin
// ====================================
$pseudo-placeholder: "::-webkit-input-placeholder" "::-moz-placeholder" ":-ms-input-placeholder" "::placeholder";
@mixin placeholder-theme($placeholder-styles) {
    @each $pseudo in $pseudo-placeholder {
        @at-root #{&}#{$pseudo} {
            @each $key, $value in $placeholder-styles {
                #{$key}: #{$value};
            }
        }
    }
}

@mixin placeholder {
    @each $pseudo in $pseudo-placeholder {
        @at-root #{&}#{$pseudo} {
            @content;
        }
    }
}

@mixin theme($name, $bgColor, $textColor) {
    body.theme-#{$name} {
        h1,
        .h1,
        h2,
        .h2,
        h3,
        .h3,
        h4,
        .h4,
        h5,
        .h5,
        h6,
        .h6 {
            color: $textColor;
        }
    }
}
